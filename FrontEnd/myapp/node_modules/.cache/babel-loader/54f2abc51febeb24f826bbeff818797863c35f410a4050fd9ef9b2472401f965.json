{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  Cart: [],\n  totalPrice: 0,\n  totalQuantity: 0,\n  quantity: 0\n};\nconst CartReducer = createSlice({\n  name: \"Cart\",\n  initialState,\n  reducers: {\n    AddToCart: (state, action) => {\n      const FindIndex = state.Cart.findIndex(x => x.id === action.payload.id);\n      if (FindIndex >= 0) {\n        state.Cart[FindIndex].quantity += 1;\n      } else {\n        state.Cart.push({\n          ...action.payload,\n          quantity: 1\n        });\n      }\n    },\n    RemoveCart: (state, action) => {\n      state.Cart = state.Cart.filter(x => x.id !== action.payload.id);\n    },\n    IncermentQuantity: (state, action) => {\n      const FindIndex = state.Cart.findIndex(x => x.id === action.payload.id);\n      if (FindIndex >= 0) {\n        state.Cart[FindIndex].quantity += 1;\n      }\n    },\n    DecermentQuantity: (state, action) => {\n      const FindIndex = state.Cart.findIndex(x => x.id === action.payload.id);\n      if (FindIndex >= 0) {\n        if (state.Cart[FindIndex].quantity > 1) state.Cart[FindIndex].quantity -= 1;\n      }\n    },\n    GetTotalCart: state => {\n      const {\n        totalPrice,\n        totalQuantity\n      } = state.Cart.reduce((CartTotal, CartItem) => {\n        const {\n          price,\n          quantity\n        } = CartItem;\n        CartTotal.totalPrice += price * quantity;\n        CartTotal.totalQuantity += quantity;\n        return CartTotal;\n      }, {\n        totalPrice: 0,\n        totalQuantity: 0\n      });\n      state.totalPrice = totalPrice.toFixed(2);\n      state.totalQuantity = totalQuantity;\n    }\n  }\n});\nexport const {\n  AddToCart,\n  RemoveCart,\n  IncermentQuantity,\n  DecermentQuantity,\n  GetTotalCart\n} = CartReducer.actions;\nexport default CartReducer.reducer;","map":{"version":3,"names":["createSlice","initialState","Cart","totalPrice","totalQuantity","quantity","CartReducer","name","reducers","AddToCart","state","action","FindIndex","findIndex","x","id","payload","push","RemoveCart","filter","IncermentQuantity","DecermentQuantity","GetTotalCart","reduce","CartTotal","CartItem","price","toFixed","actions","reducer"],"sources":["C:/practiceMERN/FrontEnd/myapp/src/Redux/CartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  Cart: [],\r\n  totalPrice: 0,\r\n  totalQuantity: 0,\r\n  quantity: 0,\r\n};\r\n\r\nconst CartReducer = createSlice({\r\n  name: \"Cart\",\r\n  initialState,\r\n  reducers: {\r\n    AddToCart: (state, action) => {\r\n      const FindIndex = state.Cart.findIndex((x) => x.id === action.payload.id);\r\n      if (FindIndex >= 0) {\r\n        state.Cart[FindIndex].quantity += 1;\r\n      } else {\r\n        state.Cart.push({ ...action.payload, quantity: 1 });\r\n      }\r\n    },\r\n    RemoveCart: (state, action) => {\r\n      state.Cart = state.Cart.filter((x) => x.id !== action.payload.id);\r\n    },\r\n    IncermentQuantity: (state, action) => {\r\n      const FindIndex = state.Cart.findIndex((x) => x.id === action.payload.id);\r\n      if (FindIndex >= 0) {\r\n        state.Cart[FindIndex].quantity += 1;\r\n      }\r\n    },\r\n    DecermentQuantity: (state, action) => {\r\n      const FindIndex = state.Cart.findIndex((x) => x.id === action.payload.id);\r\n      if (FindIndex >= 0) {\r\n        if (state.Cart[FindIndex].quantity > 1)\r\n          state.Cart[FindIndex].quantity -= 1;\r\n      }\r\n    },\r\n    GetTotalCart :(state)=>{\r\n        const{totalPrice,totalQuantity}=state.Cart.reduce(\r\n            (CartTotal,CartItem)=>{\r\n                const {price,quantity} = CartItem\r\n                CartTotal.totalPrice+=price*quantity\r\n                CartTotal.totalQuantity+=quantity\r\n                return CartTotal\r\n            },{totalPrice:0,totalQuantity:0}\r\n        )\r\n        state.totalPrice = totalPrice.toFixed(2)\r\n        state.totalQuantity = totalQuantity\r\n    }\r\n  },\r\n});\r\nexport const { AddToCart,RemoveCart,IncermentQuantity,DecermentQuantity,GetTotalCart } = CartReducer.actions;\r\nexport default CartReducer.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}