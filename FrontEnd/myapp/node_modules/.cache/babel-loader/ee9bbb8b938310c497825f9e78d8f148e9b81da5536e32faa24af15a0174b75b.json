{"ast":null,"code":"var _jsxFileName = \"C:\\\\practiceMERN\\\\FrontEnd\\\\myapp\\\\src\\\\AdminScreen\\\\AdminAuth.js\";\nimport React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdminAuth = () => {\n  const auth = localStorage.getItem(\"Token\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: auth ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/adminlogin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 32\n    }, this)\n  }, void 0, false);\n};\n_c = AdminAuth;\nexport default AdminAuth;\nvar _c;\n$RefreshReg$(_c, \"AdminAuth\");","map":{"version":3,"names":["React","Navigate","Outlet","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminAuth","auth","localStorage","getItem","children","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/practiceMERN/FrontEnd/myapp/src/AdminScreen/AdminAuth.js"],"sourcesContent":["import React from 'react'\r\nimport { Navigate, Outlet } from 'react-router-dom'\r\n\r\nconst AdminAuth = () => {\r\n    const auth  = localStorage.getItem(\"Token\")\r\n    \r\n  return (\r\n    <>\r\n     {  auth ? (<Outlet/>) : ( <Navigate to='/adminlogin' />) }  \r\n    </>\r\n  )\r\n}\r\n\r\nexport default AdminAuth\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACpB,MAAMC,IAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE7C,oBACEN,OAAA,CAAAE,SAAA;IAAAK,QAAA,EACIH,IAAI,gBAAIJ,OAAA,CAACF,MAAM;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,gBAAMX,OAAA,CAACH,QAAQ;MAACe,EAAE,EAAC;IAAa;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,gBACvD,CAAC;AAEP,CAAC;AAAAE,EAAA,GARKV,SAAS;AAUf,eAAeA,SAAS;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}