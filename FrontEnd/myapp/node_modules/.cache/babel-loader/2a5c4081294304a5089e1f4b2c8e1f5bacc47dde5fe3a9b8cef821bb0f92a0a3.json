{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useEffect } from 'react';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllProducts = () => {\n  _s();\n  useEffect(() => {}, []);\n  const getallpro = async () => {\n    try {\n      const res = (await axios.get('http://127.0.0.1:1214/api/products/users')) | console.log(res.data.users);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(AllProducts, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = AllProducts;\nexport default AllProducts;\nvar _c;\n$RefreshReg$(_c, \"AllProducts\");","map":{"version":3,"names":["axios","React","useEffect","Fragment","_Fragment","jsxDEV","_jsxDEV","AllProducts","_s","getallpro","res","get","console","log","data","users","error","_c","$RefreshReg$"],"sources":["C:/practiceMERN/FrontEnd/myapp/src/AdminScreen/AllProducts.js"],"sourcesContent":["import axios from 'axios'\r\nimport React, { useEffect } from 'react'\r\n\r\nconst AllProducts = () => {\r\n    useEffect(()=>{\r\n        \r\n    },[])\r\n    const getallpro = async()=>{\r\n       try {\r\n        const res =  await axios.get('http://127.0.0.1:1214/api/products/users')|\r\n        console.log(res.data.users)\r\n       } catch (error) {\r\n            console.log(error)\r\n       }\r\n    }\r\n  return (\r\n    <>\r\n      \r\n    </>\r\n  )\r\n}\r\n\r\nexport default AllProducts\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAA,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtBN,SAAS,CAAC,MAAI,CAEd,CAAC,EAAC,EAAE,CAAC;EACL,MAAMO,SAAS,GAAG,MAAAA,CAAA,KAAS;IACxB,IAAI;MACH,MAAMC,GAAG,GAAI,OAAMV,KAAK,CAACW,GAAG,CAAC,0CAA0C,CAAC,IACxEC,OAAO,CAACC,GAAG,CAACH,GAAG,CAACI,IAAI,CAACC,KAAK,CAAC;IAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACXJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;IACvB;EACH,CAAC;EACH,oBACEV,OAAA,CAAAF,SAAA,mBAEE,CAAC;AAEP,CAAC;AAAAI,EAAA,CAjBKD,WAAW;AAAAU,EAAA,GAAXV,WAAW;AAmBjB,eAAeA,WAAW;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}